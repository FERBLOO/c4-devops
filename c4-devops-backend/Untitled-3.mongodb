// MongoDB Playground
// Use Ctrl+Space inside a snippet or a string literal to trigger completions.

const database = 'ciclo4-db';
const collection = 'registrations';

// The current database to use.
use(database);

// Create a new collection.
db.createCollection(collection, {
validator: {
    $jsonSchema: {
      required: ['project_Id', 'user_Id'],
      properties: {
        project_Id: {
          bsonType: 'objectId'
        },
        user_Id: {
          bsonType: 'objectId'
        },
        startDate: {
          bsonType: 'date'
        },
        endDate: {
          bsonType: 'date'
        },
        status: {
          enum: ['started', 'rejected']
        }
      }
    }
  }

});

db.registrations.insertOne({ 
  project_Id: ObjectId('618c6af1013e02ccafb4ea88'),
  user_Id: ObjectId('618c6148013e02ccafb4ea73')

})

db.registrations.find();




// The prototype form to create a regular collection:
/* db.createCollection( <name>,
  {
    capped: <boolean>,
    autoIndexId: <boolean>,
    size: <number>,
    max: <number>,
    storageEngine: <document>,
    validator: <document>,
    validationLevel: <string>,
    validationAction: <string>,
    indexOptionDefaults: <document>,
    viewOn: <string>,
    pipeline: <pipeline>,
    collation: <document>,
    writeConcern: <document>
  }
) */

// The prototype form to create a time-series collection:
/* db.createCollection( <name>,
  {
    timeseries: {
      timeField: <string>,
      metaField: <string>,
      granularity: <string>
    },
    expireAfterSeconds: <number>
  }
) */
